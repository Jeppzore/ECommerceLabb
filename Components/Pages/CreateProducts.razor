@rendermode InteractiveServer

@using ECommerceLabb.Services
@using ECommerceLabb.Models
@using System.Text.Json
@using Microsoft.AspNetCore.Components.Forms

@page "/createproducts"

@inject CustomerService CustomerService
@inject ProductService ProductService
@inject ProductStateService ProductState

<PageTitle>Create Products</PageTitle>

<h3 class="mb-3">Let your imagination flow!</h3>
<hr />

@if (isConflict)
{
    <div class="alert alert-danger" role="alert">
        <b>Failed to create!</b> A product with that product number already exists, or you haven't filled in all the fields.
    </div>
}

@if (isSubmitted)
{
    <div class="alert alert-success" role="alert">
        <b>Creation successful!</b> Your product has been added.
    </div>
}
else
{
    <div class="card shadow-sm border-0 p-4" style="max-width: 500px;">
        <div class="card-body">
            <h5 class="card-title mb-3">Create a new product</h5>

            <EditForm Model="product" OnValidSubmit="HandleSubmit" FormName="SubmitForm" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label class="form-label">Product Number:</label>
                    <InputText @bind-Value="product!.ProductNumber" class="form-control" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Name:</label>
                    <InputText @bind-Value="product.Name" class="form-control" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Price:</label>
                    <InputNumber @bind-Value="product.Price" class="form-control" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Description:</label>
                    <InputText @bind-Value="product.Description" class="form-control" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Category:</label>
                    <select @bind="product.Category" class="form-select">
                        <option value="">-- Select --</option>
                        @foreach (var category in Enum.GetValues<ProductCategory>())
                        {
                            <option value="@category">@category</option>
                        }
                    </select>
                </div>

                <button type="submit" class="btn btn-primary w-100">Create Product</button>
            </EditForm>
        </div>
    </div>
}

@code {
	[SupplyParameterFromForm]
	public Product? product { get; set; } = new();

	public bool isSubmitted = false;
	public bool isConflict = false;

	public async Task HandleSubmit()
	{
		Console.WriteLine("Form submitted. Checking product object...");
		Console.WriteLine(JsonSerializer.Serialize(product, new JsonSerializerOptions { WriteIndented = true }));

		var success = await ProductService.CreateProductAsync(product!);
		Console.WriteLine("API call result: " + success);
		if (success)
		{
			isSubmitted = true;
		}
		else
		{
			isConflict = true;
		}
	}
}
