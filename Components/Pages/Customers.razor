@rendermode InteractiveServer

@using ECommerceLabb.Services
@using ECommerceLabb.Models;

@page "/customers"

@inject CustomerService CustomerService
@inject CustomerStateService CustomerState
@inject NavigationManager NavManager

<PageTitle>Customers</PageTitle>

<h3>Customers</h3>

@if (customers == null)
{
	<p>Loading...</p>
}
else
{
	<ul>
		@foreach (var customer in customers!)
		{
			<li>Full name: @customer.FirstName @customer.LastName</li>
			<li>Email: @customer.Email</li>
			<li>Address: @customer.Address</li>
			<li>Phone number: @customer.PhoneNumber</li>
			<p>
				<button @onclick="() => NavigateToUpdate(customer)"> Update </button>
			</p>
			<hr />
		}
	</ul>
}

@code {
	private List<Customer>? customers;

	protected override async Task OnInitializedAsync()
	{
		customers = await CustomerService.GetCustomersAsync();
	}

	private void NavigateToUpdate(Customer customer)
	{
		Console.WriteLine("Navigating to update..");
		CustomerState.SetSelectedCustomer(customer);
		NavManager.NavigateTo("/updatecustomers");
		Console.WriteLine("NAVIGATED!");
	}
}
