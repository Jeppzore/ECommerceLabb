
@using ECommerceLabb.Services
@using ECommerceLabb.Models
@using System.Text.Json
@using Microsoft.AspNetCore.Components.Forms
@page "/register"
@inject CustomerService CustomerService

<PageTitle>Register</PageTitle>

    <h3 class="mb-3">Register here for special offers!</h3>

    @if (isConflict)
    {
        <div class="alert alert-danger" role="alert">
            <b>Failed to register!</b> A customer with that email already exists, or you haven't filled in all the forms.
        </div>
    }

    @if (isSubmitted)
    {
        <div class="alert alert-success" role="alert">
            <b>Registration successful!</b> You are now subscribed to special offers.
        </div>
    }
    else
    {
        <div class="card shadow-sm border-0 p-4" style="max-width: 500px;">
            <div class="card-body">
                <h5 class="card-title mb-3">Fill in your details</h5>

                <EditForm Model="customer" OnValidSubmit="HandleSubmit" FormName="SubmitForm" Enhance>
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="mb-3">
                        <label class="form-label">First Name:</label>
                        <InputText @bind-Value="customer!.FirstName" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Last Name:</label>
                        <InputText @bind-Value="customer.LastName" class="form-control" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Email:</label> <label class="card-subtitle mb-2 text-muted">Example@example.com</label>
                        <InputText @bind-Value="customer.Email" class="form-control" />
                    </div>

                    <div class="mb-3">
                    <label class="form-label">Address:</label> <label class="card-subtitle mb-2 text-muted">Example street 01, 51192 New York</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-home"></i></span>
                            <InputText @bind-Value="customer.Address" class="form-control" />
                        </div>
                    </div>

                    <div class="mb-3">
                    <label class="form-label">Phone Number:</label> <label class="card-subtitle mb-2 text-muted">+46012345678</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-phone"></i></span>
                            <InputText @bind-Value="customer.PhoneNumber" class="form-control" />
                        </div>
                    </div>

                    <button type="submit" class="btn btn-primary w-100">Register</button>
                </EditForm>
            </div>
        </div>
    }


@* @if (isConflict)
{
	<p><b>Failed to register!</b> A Customer with that email already exists, or you haven't filled in all the forms.</p>
}

@if (isSubmitted)
{
	<p>Registration successful!</p>
}
else
{
	<EditForm Model ="customer" OnValidSubmit="HandleSubmit" FormName="SubmitForm" Enhance>
		<DataAnnotationsValidator />
		<ValidationSummary />

		<div>
			<label>First Name:</label>
			<InputText @bind-Value="customer!.FirstName" />
		</div>

		<div>
			<label>Last Name:</label>
			<InputText @bind-Value="customer.LastName" />
		</div>

		<div>
			<label>Email:</label>
			<InputText @bind-Value="customer.Email" />
		</div>

		<div>
			<label>Address:</label>
			<InputText @bind-Value="customer.Address" />
		</div>

		<div>
			<label>Phone Number:</label>
			<InputText @bind-Value="customer.PhoneNumber" />
		</div>

		<button type="submit">Register</button>
	</EditForm>
} *@

@code {
	[SupplyParameterFromForm]
	public Customer? customer { get; set; } = new();

	public bool isSubmitted = false;
	public bool isConflict = false;

	public async Task HandleSubmit()
	{
		Console.WriteLine("Form submitted. Checking customer object...");
		Console.WriteLine(JsonSerializer.Serialize(customer, new JsonSerializerOptions { WriteIndented = true }));

		var success = await CustomerService.RegisterCustomerAsync(customer!);
		Console.WriteLine("API call result: " + success);
		if (success)
		{
			isSubmitted = true;
		}
		else
		{
			isConflict = true;
		}
	}
}
